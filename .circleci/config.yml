version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3


###############################
#   Define the project jobs   #
###############################
jobs:

  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file infrastructure-temp.yml \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1
          
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["e7:3d:8e:67:76:8c:5a:7d:e8:a8:f5:49:df:fc:f1:3c"] 
      - run:
          name: Install AWS CLI
          command: |
              apk update \
              && apk --no-cache add curl \
              && apk --no-cache add unzip \
              && curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
              && unzip awscliv2.zip \
              && ./aws/install  
              && aws iam list-users
      - run:
          name: Get EC2 IP
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Name,Values=Testing" \
              --output text >> inventory.txt
      - run:
          name: check file
          command: |
            cat inventory.txt
      - run:
          name: Install Ansible
          command: |
            pip install ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook main-remote.yml -i inventory.txt


############################
#   Define the workflows   #
############################
workflows:
  my_workflow:
    jobs:
      # - create_infrastructure
      - configure_infrastructure
          # requires:
          #   - create_infrastructure